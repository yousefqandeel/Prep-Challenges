{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Equality In An Array](https://www.hackerrank.com/challenges/equality-in-a-array/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "'use strict';\r\nconst fs = require('fs');\r\nprocess.stdin.resume();\r\nprocess.stdin.setEncoding('utf-8');\r\nlet inputString = '';\r\nlet currentLine = 0;\r\nprocess.stdin.on('data', function(inputStdin) {\r\n    inputString += inputStdin;\r\n});\r\nprocess.stdin.on('end', function() {\r\n    inputString = inputString.split('\\n');\r\n    main();\r\n});\r\nfunction readLine() {\r\n    return inputString[currentLine++];\r\n}\r\n/*\r\n * Complete the 'equalizeArray' function below.\r\n *\r\n * The function is expected to return an INTEGER.\r\n * The function accepts INTEGER_ARRAY arr as parameter.\r\n */\r\nfunction equalizeArray(arr) {\r\n    let max = 0;\r\n    let values = arr.reduce((target, value, index) => { \r\n        target[value] = (target[value] || 0) + 1;\r\n\r\n        target[value] > max && (max = target[value]);\r\n\r\n        return target;\r\n    }, []);\r\n\r\n    return arr.length - max;\r\n}\r\nfunction main() {\r\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\r\n    const n = parseInt(readLine().trim(), 10);\r\n    const arr = readLine().replace(/\\s+$/g, '').split(' ').map(arrTemp => parseInt(arrTemp, 10));\r\n    const result = equalizeArray(arr);\r\n    ws.write(result + '\\n');\r\n    ws.end();\r\n}"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Halloween Sale](https://www.hackerrank.com/challenges/halloween-sale/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                ""
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Sherlock And Squares](https://www.hackerrank.com/challenges/sherlock-and-squares/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}